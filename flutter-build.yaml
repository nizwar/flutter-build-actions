name: Build Flutter APKs & Appbundle
on: push

jobs:
  build:
    name: Build Flutter Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [documentation, apks, appbundle]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        if: matrix.target != 'documentation'
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21.x'

      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Build Documentation
        if: matrix.target == 'documentation'
        run: |
          flutter pub global activate dartdoc
          flutter pub global run dartdoc

      - name: Build APKs (Split by ABI)
        if: matrix.target == 'apks'
        run: flutter build apk --release --split-per-abi

      - name: Build Appbundle
        if: matrix.target == 'appbundle'
        run: flutter build appbundle

      - name: Upload artifacts
        if: matrix.target == 'apks' || matrix.target == 'appbundle'
        uses: actions/upload-artifact@v4
        with:
          name: publish-artifacts-${{ matrix.target }}
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
          if-no-files-found: ignore
          overwrite: true

  publish:
    name: Publish the binaries
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 

      - name: Get project version
        id: project_version
        uses: its404/get-flutter-version@v1.0.0
        
      - name: Download apks
        uses: actions/download-artifact@v4
        with:
          name: publish-artifacts-apks 

      - name: Download appbundle
        uses: actions/download-artifact@v4
        with:
          name: publish-artifacts-appbundle 

      - name: Display structure of downloaded apks
        run: ls -R build/app/outputs/flutter-apk

      - name: Display structure of downloaded bundle
        run: ls -R build/app/outputs/bundle/release

      - name: Release Binary
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk,build/app/outputs/bundle/release/*.aab"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.project_version.outputs.version_number }}+${{steps.project_version.outputs.build_number}}-${{github.run_number}}
          name: "Release ${{ steps.project_version.outputs.version_number }}+${{steps.project_version.outputs.build_number}}"
          generateReleaseNotes: true
